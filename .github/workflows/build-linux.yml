name: Linux build

on: [push, pull_request]

jobs:
  precheks:
    runs-on: ubuntu-latest
    name: Linux -> Pre-checks

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Format validation
        shell: bash
        working-directory: ${{github.workspace}}/BuildTools/FormatValidation
        run: ./validate_format_linux.sh

      - name: Codespell
        uses: codespell-project/actions-codespell@master
        with:
          check_filenames: true
          ignore_words_file: .github/.codespellignore
          skip: ./.git,./ThirdParty
          path: .


  build:
    needs:   precheks
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name:            "GCC"
            build_type:      "Debug"
            cmake_generator: "Unix Makefiles"
            cmake_args:      "-DDILIGENT_BUILD_TESTS=ON"
            cc:              "gcc-9"
            cxx:             "g++-9"

          - name:            "GCC"
            build_type:      "Release"
            cmake_generator: "Unix Makefiles"
            cmake_args:      "-DDILIGENT_BUILD_TESTS=ON"
            cc:              "gcc-9"
            cxx:             "g++-9"

          - name:            "Clang"
            build_type:      "Debug"
            cmake_generator: "Ninja"
            cmake_args:      "-DDILIGENT_BUILD_TESTS=ON"
            cc:              "clang-12"
            cxx:             "clang++-12"

          - name:            "Clang"
            build_type:      "Release"
            cmake_generator: "Ninja"
            cmake_args:      "-DDILIGENT_BUILD_TESTS=ON"
            cc:              "clang-12"
            cxx:             "clang++-12"

          - name:            "Clang-NO_GLSLANG"
            build_type:      "Debug"
            cmake_generator: "Ninja"
            cmake_args:      "-DDILIGENT_BUILD_CORE_TESTS=ON -DDILIGENT_NO_OPENGL=ON -DDILIGENT_NO_GLSLANG=ON"
            cc:              "clang-12"
            cxx:             "clang++-12"

          - name:            "Clang-NO_GLSLANG-NO_HLSL"
            build_type:      "Release"
            cmake_generator: "Ninja"
            cmake_args:      "-DDILIGENT_BUILD_CORE_TESTS=ON -DDILIGENT_NO_GLSLANG=ON -DDILIGENT_NO_HLSL=ON"
            cc:              "clang-12"
            cxx:             "clang++-12"

    name: Linux -> ${{ matrix.name }}-x64, ${{ matrix.build_type }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up build environment
      if:   success()
      uses: DiligentGraphics/github-action/setup-build-env@v1
      with:
        platform:        Linux
        cmake-generator: ${{ matrix.cmake_generator }}

    - name: Configure CMake
      if:   success()
      uses: DiligentGraphics/github-action/configure-cmake@v1
      with:
        cc:         ${{ matrix.cc }}
        cxx:        ${{ matrix.cxx }}
        generator:  ${{ matrix.cmake_generator }}
        build-type: ${{ matrix.build_type }}
        cmake-args: ${{ matrix.cmake_args }}


    - name: Build
      if:   success()
      uses: DiligentGraphics/github-action/build@v1
      with:
        target: install

    - name: DiligentCoreTest
      if:   success()
      uses: DiligentGraphics/github-action/run-core-tests@v1

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() && matrix.build_type != 'Debug' }}
      with:
        name: DiligentCore-Linux-${{ matrix.name }}-x64-${{ matrix.build_type }}
        path: |
          ${{env.DILIGENT_INSTALL_DIR}}
          !${{env.DILIGENT_INSTALL_DIR}}/**/*.a
        retention-days: 90
